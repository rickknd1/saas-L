"use client"

import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Plus, Search, Filter, FolderOpen, Users, Clock, MoreVertical, AlertCircle, Sparkles, Lock, Shield, Share2, Trash2, UserPlus, AlertTriangle } from "lucide-react"
import Link from "next/link"
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { useUserPlan } from "@/hooks/use-user-plan"
import { useState } from "react"
import { toast } from "sonner"
import { SecurityModal } from "@/components/security/security-modal"
import { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { Label } from "@/components/ui/label"
import { Checkbox } from "@/components/ui/checkbox"

const projects = [
  {
    id: 1,
    name: "Contrat de fusion ABC Corp",
    description: "Révision et négociation du contrat de fusion",
    status: "En révision",
    members: 2,
    documents: 12,
    lastUpdate: "Il y a 2 heures",
    dueDate: "15 Jan 2025",
    confidential: true,
  },
  {
    id: 2,
    name: "Accord de confidentialité XYZ",
    description: "NDA pour partenariat stratégique",
    status: "En attente",
    members: 1,
    documents: 5,
    lastUpdate: "Il y a 5 heures",
    dueDate: "20 Jan 2025",
    confidential: true,
  },
  {
    id: 3,
    name: "Bail commercial - Paris 8ème",
    description: "Contrat de location commerciale",
    status: "Finalisé",
    members: 2,
    documents: 8,
    lastUpdate: "Hier",
    dueDate: "10 Jan 2025",
    confidential: false,
  },
]

export default function ProjectsPage() {
  const { isFreemium, isLoading } = useUserPlan()
  const projectCount = projects.length
  const projectLimit = 5

  const [showShareModal, setShowShareModal] = useState(false)
  const [showDeleteModal, setShowDeleteModal] = useState(false)
  const [showMembersModal, setShowMembersModal] = useState(false)
  const [selectedProject, setSelectedProject] = useState<any>(null)
  const [shareEmail, setShareEmail] = useState("")
  const [shareSettings, setShareSettings] = useState({
    canEdit: false,
    canInvite: false,
    canDelete: false,
  })

  if (isLoading) {
    return <div className="space-y-6">Chargement...</div>
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold tracking-tight">Projets</h1>
          <p className="text-muted-foreground">Gérez tous vos dossiers juridiques</p>
        </div>
        <Button className="bg-primary text-primary-foreground hover:bg-primary/90" asChild>
          <Link href="/dashboard/projects/new">
            <Plus className="mr-2 h-4 w-4" />
            Nouveau projet
          </Link>
        </Button>
      </div>

      {isFreemium && projectCount >= projectLimit - 1 && (
        <Alert className="border-accent/50 bg-accent/5">
          <AlertCircle className="h-4 w-4 text-accent" />
          <AlertDescription className="flex items-center justify-between">
            <span>
              Vous utilisez{" "}
              <strong>
                {projectCount}/{projectLimit} projets
              </strong>
              . Passez au plan Standard pour des projets illimités.
            </span>
            <Button variant="outline" size="sm" className="ml-4 shrink-0 bg-transparent" asChild>
              <Link href="/dashboard/upgrade">
                <Sparkles className="mr-2 h-3 w-3" />
                Passer au Standard
              </Link>
            </Button>
          </AlertDescription>
        </Alert>
      )}

      {/* Filters */}
      <Card className="border-border">
        <CardContent className="pt-6">
          <div className="flex flex-col gap-4 md:flex-row">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground" />
              <Input type="search" placeholder="Rechercher un projet..." className="pl-9" />
            </div>
            <Select defaultValue="all">
              <SelectTrigger className="w-full md:w-48">
                <SelectValue placeholder="Statut" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">Tous les statuts</SelectItem>
                <SelectItem value="draft">Brouillon</SelectItem>
                <SelectItem value="review">En révision</SelectItem>
                <SelectItem value="pending">En attente</SelectItem>
                <SelectItem value="completed">Finalisé</SelectItem>
              </SelectContent>
            </Select>
            <Button variant="outline" className="w-full md:w-auto bg-transparent">
              <Filter className="mr-2 h-4 w-4" />
              Filtres
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Projects Grid */}
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {projects.map((project) => (
          <Card key={project.id} className="border-border transition-shadow hover:shadow-lg">
            <CardHeader>
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <CardTitle className="text-lg leading-tight">
                    <Link href={`/dashboard/projects/${project.id}`} className="hover:text-primary">
                      {project.name}
                    </Link>
                  </CardTitle>
                  <CardDescription className="mt-2">{project.description}</CardDescription>
                </div>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button variant="ghost" size="icon" className="h-8 w-8">
                      <MoreVertical className="h-4 w-4" />
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent align="end">
                    <DropdownMenuItem>Ouvrir</DropdownMenuItem>
                    <DropdownMenuItem>Modifier</DropdownMenuItem>
                    <DropdownMenuItem>Partager</DropdownMenuItem>
                    <DropdownMenuItem className="text-destructive">Supprimer</DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </div>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex items-center justify-between">
                <Badge
                  variant={project.status === "Finalisé" ? "secondary" : "default"}
                  className={
                    project.status === "En révision"
                      ? "bg-primary/10 text-primary hover:bg-primary/20"
                      : project.status === "Finalisé"
                        ? ""
                        : project.status === "Brouillon"
                          ? "bg-muted text-muted-foreground hover:bg-muted"
                          : "bg-accent/10 text-accent hover:bg-accent/20"
                  }
                >
                  {project.status}
                </Badge>
                <span className="text-sm text-muted-foreground">{project.lastUpdate}</span>
              </div>

              <div className="flex items-center justify-between text-sm">
                <div className="flex items-center gap-4">
                  <div className="flex items-center gap-1 text-muted-foreground">
                    <FolderOpen className="h-4 w-4" />
                    <span>{project.documents}</span>
                  </div>
                  <div className="flex items-center gap-1 text-muted-foreground">
                    <Users className="h-4 w-4" />
                    <span>{project.members}</span>
                  </div>
                </div>
                <div className="flex items-center gap-1 text-muted-foreground">
                  <Clock className="h-4 w-4" />
                  <span>{project.dueDate}</span>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  )
}
